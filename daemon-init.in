#!/bin/sh

# Naemon - Startup script for the Naemon monitoring daemon
#
# chkconfig:    - 85 15
# description:  Naemon is a service monitoring system
# processname:  naemon
# config:       /etc/naemon/naemon.cfg
# pidfile:      /var/cache/naemon/naemon.pid
#
### BEGIN INIT INFO
# Provides:          naemon
# Required-Start:    $local_fs $remote_fs $syslog $network
# Required-Stop:     $local_fs $remote_fs $syslog $network
# Should-Start:
# Should-Stop:
# Default-Start:     3 5
# Default-Stop:      0 1 2 6
# Short-Description: start and stop Naemon monitoring server
# Description:       Naemon is is a service monitoring system
### END INIT INFO

# Source function library.
if [ -e /etc/rc.d/init.d/functions ]; then
  . /etc/rc.d/init.d/functions
fi

status() {
  [ ! -e $pidfile ] && return 1;
  PID=`cat $pidfile`;
  kill -0 $PID
  return $?
}

prefix="@prefix@"
exec_prefix="@exec_prefix@"
exec="@bindir@/naemon"
prog="naemon"
config="@sysconfdir@/naemon.cfg"
pidfile="@lockfile@"
user="naemon"
group="naemon"
checkconfig="false"

# Default nice for performance, change in sysconfig file not here!
NICELEVEL=-15

test -e /etc/sysconfig/$prog && . /etc/sysconfig/$prog

lockfile=/var/lock/subsys/$prog

check_config() {
    TMPFILE=$(mktemp /tmp/.configtest.XXXXXXXX)
    $0 configtest > "$TMPFILE"
    WARN=`grep ^"Total Warnings:" "$TMPFILE" |awk -F: '{print \$2}' |sed s/' '//g`
    ERR=`grep ^"Total Errors:" "$TMPFILE" |awk -F: '{print \$2}' |sed s/' '//g`

    if test "$WARN" = "0" && test "${ERR}" = "0"; then
        echo "OK - Configuration check verified" > @TMPDIR@/naemon.configtest
        chmod 0644 @TMPDIR@/naemon.configtest
        /bin/rm "$TMPFILE"
    return 0
    else
        # We'll write out the errors to a file we can have a
        # script watching for
        echo "WARNING: Errors in config files - see log for details: $TMPFILE" > @TMPDIR@/naemon.configtest
        egrep -i "(^warning|^error)" "$TMPFILE" >> @TMPDIR@/naemon.configtest
        chmod 0644 @TMPDIR@/naemon.configtest
        cat "$TMPFILE"
    exit 8
    fi
}

start() {
    test -x $exec || exit 5
    test -f $config || exit 6
    if [ "$checkconfig" = "false" ]; then
        check_config
    fi
    echo -n $"Starting $prog: "
    # We need to _make sure_ the precache is there and verified
    # Raise priority to make it run better
    if type start-stop-daemon >/dev/null 2>&1; then
        start-stop-daemon --nicelevel $NICELEVEL --start --user $user --name $prog --pidfile $pidfile --exec $exec -- -d $config
    else
        daemon --user=$user $exec -d $config
    fi
    retval=$?
    echo
    if [ -d /var/lock/subsys ]; then
      test $retval -eq 0 && touch $lockfile
    fi
    return $retval
}

stop() {
    echo -n $"Stopping $prog: "
    pkill -u ${user} -f ${exec} || \
    pkill -u ${user} -f $(basename $exec) # ex.: sles uses basename only
    retval=$?
    echo
    test $retval -eq 0 && rm -f $lockfile
    return $retval
}


restart() {
    check_config
    checkconfig="true"
    stop
    sleep 1
    start
}

reload() {
    echo -n $"Reloading $prog: "
    pkill -HUP -u ${user} -f ${exec}
    RETVAL=$?
    echo
}

force_reload() {
    restart
}

case "$1" in
    start)
        status $prog && exit 0
        $1
        ;;
    stop)
        status $prog|| exit 0
        $1
        ;;
    restart)
        $1
        ;;
    reload)
        status $prog || exit 7
        $1
        ;;
    force-reload)
        force_reload
        ;;
    status)
        if status $prog; then
          PID=`cat $pidfile`;
          echo "naemon (pid $PID) is running..."
          exit 0
        else
          echo "naemon is stopped"
          exit 1
        fi
        ;;
    condrestart|try-restart)
        status $prog|| exit 0
        restart
        ;;
    configtest|check|checkconfig)
        if type runuser >/dev/null 2>&1; then
          $nice runuser -s /bin/bash - $user -c "$corelimit >/dev/null 2>&1 ; $exec -vp $config"
        else
          /bin/su - -s /bin/sh $user -c "$corelimit >/dev/null 2>&1 ; $exec -vp $config"
        fi
        RETVAL=$?
        ;;
    *)
        echo $"Usage: $0 {start|stop|status|restart|condrestart|try-restart|reload|force-reload|configtest}"
        exit 2
esac
exit $?
